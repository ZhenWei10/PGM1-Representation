cd "/Users/zhenwei/Desktop/Probability_graphical_models/Assignment-3"addpath "/Users/zhenwei/Desktop/Probability_graphical_models/Assignment-3"PA3Data = load('PA3Data.mat');PA3Data.allWords; %A cell array.i = 1; %word indexj = 2; %character indexPA3Data.allWords{i}(j).img % character j in image of word iPA3Data.allWords{i}(j).groundTruth %ground truth character j of word ilength(PA3Data.allWords) %Words numberPA3Models = load('PA3Models.mat');PA3Models.imageModel.KPA3Models.imageModel.params %The logits of a precomputed logistic regression model on the data.PA3Models.pairwiseModelPA3Models.tripletList %?PA3SampleCases = load('PA3SampleCases.mat');PA3TestCases = load('PA3TestCases.mat');ComputeImageFactor(image, imageModel); %Implement a precomputed logistic model to retrieve the score/similarities of each word (predictors) to the image pixels (response).images = PA3Data.allWords{1};imageModel = PA3Models.imageModel;%2.2 singleton OCR featuresComputeImageFactor(images(1).img, imageModel);ComputeSingletonFactors(images, imageModel);%2.3 inference on OCR networkBuildOCRNetwork (images, imageModel, pairwiseModel = [], tripletList = []) %Create a complete network.ComputeWordPredictions(PA3Data.allWords, imageModel,[],[]); %Failed, so let's just skip it.[charAcc, wordAcc] = ScoreModel(PA3Data.allWords, imageModel, [], []);submit %see if the first question is correct or not.%2.4 pairwise Factors. (Factors link the adjecent characters in a word)images = PA3Data.allWords{1};pairwiseModel = PA3Models.pairwiseModel;K = PA3Models.imageModel.K;tripletList = PA3Models.tripletList;ComputePairwiseFactors (images, pairwiseModel, K);ComputePairwiseFactors (images, pairwiseModel, K);ComputeTripletFactors (images, tripletList, K);ComputeSimilarityFactor (images, K, i, j);allFactors = ComputeAllSimilarityFactors (images, K);F = 10;